module Sort
{
    imports
    {
        console = new Heron.Windows.Console();
    }
    methods
    {
        AddRange(xs : List, ys : Seq)
        {
            foreach (y in ys)
                xs.Add(y);
        }
        Swap(xs : List, a : Int, b : Int)
        {
            var tmp = xs[a];
            xs[a] = xs[b];
            xs[b] = tmp;
        }
        Sort(xs : List) : List
        {
            var n = xs.Count();
            if (n < 2)
                return xs;
            else if (n == 2)
            {
                if (xs[0] > xs[1])
                {
                    return [xs[1], xs[0]];    
                }
                else 
                {
                    return xs;
                }
            }
            else 
            {
              var mid = n / 2;
              Swap(xs, 0, mid);
              var pivot = xs[0];
              var ys = select (x from xs) x < pivot;
              var zs = select (x from xs) x > pivot;
              var r = ys;
              r.Add(pivot);
              AddRange(r, zs);
              return r;
            }
        }
        Main()
        {
            var xs = [10, 3, 2, 4, 7, 1, 9, 8, 5, 6];
            var ys = Sort(xs);
            WriteLine(ys.ToString());
        }
    }
}